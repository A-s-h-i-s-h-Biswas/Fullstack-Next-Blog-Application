// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  identifier String   @id @default(cuid()) @map("_id")
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String?
  email         String   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
  comments      Comment[]
}

model Category {
  id       String    @id @default(cuid()) @map("_id")
  slug     String    @unique
  title    String
  img      String?
  posts    Post[]
}

model Post {
  id        String    @id @default(cuid()) @map("_id")
  createdAt DateTime  @default(now())
  slug      String    @unique
  title     String
  img       String?
  desc      String
  views     Int       @default(0)
  author    User      @relation(fields: [userEmail], references: [email])
  userEmail String
  catSlug   String
  cat       Category  @relation(fields: [catSlug], references: [slug])
  comments  Comment[]
}

model Comment {
  id        String    @id @default(cuid()) @map("_id") 
  createdAt DateTime  @default(now())
  comment   String
  post      Post      @relation(fields: [postSlug], references: [id])
  postSlug    String    
  author    User      @relation(fields: [userEmail], references: [email])
  userEmail String
}
